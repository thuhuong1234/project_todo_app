// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @db.VarChar(255)
  password String   @db.VarChar(255)
  email    String   @unique @db.VarChar(255)
  role     Role     @default(User)
  phone    String?  @unique @db.VarChar(11)
  avatar   String?  @db.VarChar(255)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  tasksOfUser TaskOfUser[]
  reviews     Review[]

  @@map("users")
}

model Task {
  id          Int      @id @default(autoincrement())
  taskname    String   @db.VarChar(255)
  description String   @db.VarChar(255)
  stage       Stage    @default(Todo)
  startTime   DateTime @default(now())
  endTime     DateTime @updatedAt

  tasksOfUser     TaskOfUser[]
  tasksOfCategory TaskOfCategory[]
  reviewsOfTask   ReviewOfTask[]

  @@map("tasks")
}

model Category {
  id           Int    @id @default(autoincrement())
  categoryname String @db.VarChar(255)
  description  String @db.VarChar(255)

  tasksOfCategory TaskOfCategory[]

  @@map("categories")
}

model Review {
  id         Int    @id @default(autoincrement())
  content    String @db.VarChar(255)
  reviewerId Int?
  reviewer   User?  @relation(fields: [reviewerId], references: [id])

  reviewsOfTask ReviewOfTask[]

  @@map("reviews")
}

model TaskOfUser {
  participantId Int
  participants  User @relation(fields: [participantId], references: [id])
  task          Task @relation(fields: [taskId], references: [id])
  taskId        Int

  @@id([participantId, taskId])
  @@map("tasks_of_user")
}

model TaskOfCategory {
  taskId     Int
  task       Task     @relation(fields: [taskId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([taskId, categoryId])
  @@map("tasks_of_category")
}

model ReviewOfTask {
  taskId   Int
  task     Task   @relation(fields: [taskId], references: [id])
  reviewId Int
  review   Review @relation(fields: [reviewId], references: [id])

  @@id([taskId, reviewId])
  @@map("reviews_of_task")
}

enum Role {
  Leader
  User
}

enum Stage {
  Todo
  InProgress
  Review
  Testing
  Done
}
